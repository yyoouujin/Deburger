<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.deburger.app.shop.stock.mapper.StockMapper">
	<select id="selectStock" parameterType="StockVO">

		SELECT *
		FROM (
			SELECT ROWNUM RN, A.*
			FROM (
				select m.material_number
				,m.material_name
				,m.material_classification
				,m.unit
				,m.sale_unitprice
				,NVL(s.stock_count,0) AS stock_Count
				,NVL(s.safety_stock,0) AS safety_Stock
				from (
				select *
				from store_stock
				where store_number = #{storeNumber} ) s
				RIGHT OUTER JOIN material m on s.material_number = m.material_number
				order
				by STOCK_COUNT DESC
			) A
		)
		WHERE RN BETWEEN #{start} AND #{end}


	</select>

	<select id="shopcountMaterial" resultType="int">
		select count(*) from
		material
	</select>

	<insert id="insertCart" parameterType="StockVO">
		INSERT INTO
		order_cart(cart_number
		,store_number
		,material_number
		,count)
		VALUES
		(OC_SEQ.NEXTVAL
		,#{storeNumber}
		,#{materialNumber}
		,1)
	</insert>

	<select id="selectStockinfo" parameterType="StockVO">
		SELECT *
		FROM (
			SELECT ROWNUM RN, A.*
			FROM (
					select
						i.expiration_limit
						,m.material_name
						,i.remain_stock_count
						,d.count
						,o.order_day
						,i.order_details_number
						,i.Material_number
					from store_in i	join material m
							on i.Material_number = m.Material_number
						join order_details d
							on i.order_details_Number = d.order_details_Number
						join store_Order o
							on o.order_number = d.order_number
						where i.Material_number	= #{materialNumber}
							and i.store_number = #{storeNumber}
					order by i.order_details_number DESC
			) A
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="shopinfo" resultType="int">
        select count(*) 
        from store_in
        where store_number = #{storeNumber}
        and material_number = #{materialNumber}
	</select>
	
	
	

	<update id="updqtestoreStock" parameterType="StockVO">
		update store_stock
		set stock_count = stock_count + #{stockCount}
		where store_Number =
		#{storeNumber}
		AND MATERIAL_NUMBER = #{materialNumber}
	</update>

	<update id="updqtestoreIn" parameterType="StockVO">
		update store_in
		set
		remain_Stock_Count = remain_Stock_Count + #{remainStockCount}
		where
		order_details_number = #{orderDetailsNumber}
	</update>

	<insert id="insertstoreProductSale" parameterType="StockVO">
		Insert Into
		store_Material_consumption(
		material_Number
		,amountcon
		,product_date
		,seq
		,store_number
		,operation
		,note
		)
		values(
		#{materialNumber}
		,#{amountcon}
		,sysdate
		,SM_SEQ.NEXTVAL
		,#{storeNumber}
		,'M2'
		,#{note}
		)
	</insert>

	<select id="stockClassification" parameterType="StockVO">
		select DISTINCT
		material_classification
		from material
	</select>

	<select id="classificationList" parameterType="StockVO">
		select m.material_number
		,m.material_name
		,m.material_classification
		,m.unit
		,m.sale_unitprice
		,NVL(s.stock_count,0) AS stock_Count
		,NVL(s.safety_stock,0) AS safety_Stock
		from (select * from store_stock
		where store_number = #{storeNumber} ) s
		RIGHT OUTER JOIN material m on s.material_number = m.material_number
		where
		material_classification = #{materialClassification}
		order by
		STOCK_COUNT DESC
	</select>
	
	<select id="countCart" parameterType="ShopOrderVO">
	select count(*)
	from order_cart
	where Material_number = #{materialNumber}
	And store_number = #{storeNumber}
	</select>
</mapper>