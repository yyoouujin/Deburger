<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deburger.app.office.logistic.mapper.LogisticMapper">


<!-- 물류창고 전체 조회 페이징 -->
	<select id="selectLogisticAll" resultType="LogisticVO">
	    <![CDATA[
			SELECT logistics_id
			      , logistics_name
			      , basics_address
	          	  , details_address
	          	  , note
			      , permission_day
		    FROM 
		    (
		        SELECT
		        ROWNUM R, logistics_id, logistics_name, basics_address, details_address, note, permission_day
		        FROM logistics
		        WHERE ROWNUM <= #{pageNum} * #{amount}
		    )
		    WHERE R > (#{pageNum}-1) * #{amount}
		    ORDER BY logistics_id
	    ]]>
	</select>


<!-- 전체 데이터 카운트 -->
	<select id="getTotal" resultType="int">
		SELECT COUNT(*) FROM logistics
	</select>

<!-- 물류창고 상세 조회 페이징 -->
	<select id="selectLogisticInfo" resultType="LogisticVO">
		SELECT * 
				FROM (
				    SELECT ROWNUM RN, A.* 
				    FROM (
			            SELECT DISTINCT m.material_number
						      , m.material_name
						      , m.unit
						      , m.logistics_safety_stock
						      , s.stock_count
						      , (NVL(m.logistics_safety_stock, 0) - NVL(s.stock_count, 0)) AS require_stock
						      , (SELECT SUM(stock_count) 
						         FROM logistics_stock
						         WHERE logistics_id=#{logisticsId}) AS allstock
						FROM material m LEFT OUTER JOIN logistics_stock s ON (m.material_number = s.material_number) AND s.logistics_id= #{logisticsId} 
						                LEFT OUTER JOIN logistics_in i ON (i.logistics_id = s.logistics_id) AND i.disposal_operation = 'd1'
						ORDER BY m.material_number
			        ) A
			)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>

<!-- 전체 재료 카운트(페이징) -->
	<select id="getMatTotal" resultType="int">
		SELECT COUNT(*) FROM material
	</select>
	
	
<!-- 필요 재고 -->
<select id="requireStock" resultType="LogisticVO">
	<![CDATA[
		SELECT DISTINCT m.material_number
		                , m.material_name
		                , m.unit
		                , m.logistics_safety_stock
		                , s.stock_count
		                , (NVL(m.logistics_safety_stock, 0) - NVL(s.stock_count, 0)) as require_stock
		FROM material m LEFT OUTER JOIN logistics_stock s ON (m.material_number = s.material_number) AND s.logistics_id= #{logisticsId} 
								    LEFT OUTER JOIN logistics_in i ON (i.logistics_id = s.logistics_id) AND i.disposal_operation = 'd1'
		 WHERE (NVL(m.logistics_safety_stock, 0) - NVL(s.stock_count, 0)) > 0
		ORDER BY m.material_number
	]]>
</select>


<!-- 충분 재고 -->
<select id="enoughStock">
	<![CDATA[
		SELECT DISTINCT m.material_number
		                , m.material_name
		                , m.unit
		                , m.logistics_safety_stock
		                , s.stock_count
		                , (NVL(m.logistics_safety_stock, 0) - NVL(s.stock_count, 0)) as require_stock
		FROM material m LEFT OUTER JOIN logistics_stock s ON (m.material_number = s.material_number) AND s.logistics_id= #{logisticsId}
								    LEFT OUTER JOIN logistics_in i ON (i.logistics_id = s.logistics_id) AND i.disposal_operation = 'd1'
		 WHERE (NVL(m.logistics_safety_stock, 0) - NVL(s.stock_count, 0)) < 0
		ORDER BY m.material_number
	]]>
</select>

<!-- 물류창고 물품 상세 조회 -->
	<select id="selectLogisticMaterialInfo" resultType="LogisticVO">
		SELECT m.material_number 
		      , m.material_name
		      , m.material_classification
		      , m.unit
		      , m.logistics_safety_stock
		      , i.expiration_limit
		      , i.in_day                      
		      , i.in_count
		      , i.details_order_number
		      , d.order_number
		      , l.logistics_id
		      , max(s.client_id) client_id
		      , LISTAGG(s.client_name, ', ') WITHIN GROUP(ORDER BY s.client_name) AS aggclient_name
		FROM material m JOIN logistics_in i ON m.material_number = i.material_number
		                JOIN logistics_order_details d ON i.details_order_number = d.details_order_number
		                JOIN logistics_order o ON d.order_number = o.order_number
		                JOIN logistics l ON o.logistics_id = l.logistics_id
		                JOIN company_material c ON m.material_number = c.material_number
		                JOIN supplier s ON c.client_id = s.client_id
		WHERE o.logistics_id = #{logisticsId} AND i.material_number = #{materialNumber}
		GROUP BY m.material_number, m.material_name, m.material_classification, m.unit, m.logistics_safety_stock, i.expiration_limit, i.in_day, i.in_count, i.details_order_number, d.order_number, l.logistics_id
		ORDER BY l.logistics_id
	</select>


<!-- 물류창고 등록시 담당자 ID 정보 -->
	<select id="selectLogisticPersonId" resultType="LogisticVO">
		SELECT person_id
		FROM person
		WHERE department = '물류담당자'
	</select>


<!-- 물류창고 등록 -->
	<insert id="insertLogisticInfo">
	<selectKey keyProperty="logisticsId"
				resultType="String"
				order="BEFORE">
		SELECT 'CTN' || LPAD((MAX(SUBSTR(logistics_id, 4))+1), '7', '0')
		FROM logistics
	</selectKey>
		INSERT INTO logistics (logistics_id
		                      , logistics_name
		                      , postal
		                      , basics_address
		                      , details_address
		                      , note
		                      , phone
		                      , permission_day
		                      , person_id)
		VALUES ( #{logisticsId}
		        , #{logisticsName}
		        , #{postal}
		        , #{basicsAddress}
		        , #{detailsAddress}
		        , #{note}
		        , #{phone}
		        , #{permissionDay}
		        , #{personId})
	</insert>


<!-- 물류창고 정보 조회 아작스 -->
	<select id="selectLogisticDetailInfo" resultType="LogisticVO">
		SELECT logistics_id
			, logistics_name
			, postal
			, basics_address
			, note
			, details_address
			, phone
			, permission_day
			, person_id
			, note
		FROM logistics
		WHERE logistics_id= #{logisticsId}
	</select>


<!-- 물류창고 정보 수정 아작스 -->
	<update id="updateLogisticInfo" parameterType="LogisticVO">
		UPDATE logistics
		SET logistics_name = #{logisticsName}
		    , basics_address = #{basicsAddress}
		    , details_address = #{detailsAddress}
		    , note = #{note}
		    , postal = #{postal}
		    , phone = #{phone}
		WHERE logistics_id=#{logisticsId}
	</update>
	
<!-- 물류창고 정보 삭제 -->
	<delete id="deleteLogisticInfo" parameterType="LogisticVO">
		DELETE logistics
		WHERE logistics_id=#{logisticsId}
	</delete>
	
</mapper>