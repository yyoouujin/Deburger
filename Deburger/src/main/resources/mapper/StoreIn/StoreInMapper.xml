<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.deburger.app.shop.storein.mapper.StoreInMapper">

	<select id="StoreInList" resultType="StoreInVO">
		SELECT *
		FROM (
		SELECT ROWNUM RN, A.*
		FROM (

       select
			    o.order_day
			    ,o.order_Number
			    ,o.order_Name
			    ,o.oder_App
			    ,d.in_operation 
			From (SELECT *
			      FROM store_order
			      where oder_app='L3'
			      and store_number =  #{storeNumber}) o       
			JOIN (SELECT in_Day
			           , disposal_Operation
			           , note
			           , in_operation
			           , order_number
			           , ROW_NUMBER() OVER(PARTITION BY order_number ORDER BY a.order_number DESC) AS rn
			      FROM order_details a LEFT OUTER JOIN store_in b
			      on a.order_details_number = b.order_details_number) d
			on o.order_number = d.order_number
			WHERE d.rn = '1' 
            AND in_operation is null
			ORDER by ORDER_NUMBER DESC 
			
			

		
		) A
		)
		WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
		<select id="shopincoun" resultType="int">
		select count(*) from
		store_order
        where oder_app = 'L2'
        and store_number =  #{storeNumber}
	</select>

	<select id="StoreIninfoList" resultType="StoreInVO">
		select DISTINCT
		o.order_number
		,o.order_day
		,d.order_details_number
		,m.material_name
		,d.count
		,i.Expiration_limit
		,i.consumption_limit
		,i.manufacture_day
		,d.material_number
		from store_order o join order_details d
		on
		o.order_number = d.order_number
		join material m
		on d.material_number =
		m.material_number
		LEFT OUTER JOIN logistics_out l
		on
		d.order_details_number = l.order_details_number
		LEFT OUTER JOIN
		logistics_in i
		on l.LOT = i.LOT
		where o.order_number = #{orderNumber}
		order by d.order_details_number
	</select>

	<insert id="insertStoreInList" parameterType="StoreInVO">
		insert into
		store_in(
		IN_NUMBER
		,DISPOSAL_OPERATION
		,IN_IMAGE
		,NOTE
		,MANUFACTURE_DAY
		,REMAIN_STOCK_COUNT
		,CONSUMPTION_LIMIT
		,EXPIRATION_LIMIT
		,IN_DAY
		,ORDER_DETAILS_NUMBER
		,IN_OPERATION
		,COUNT
		,MATERIAL_NUMBER
		,store_number
		)
		values (
		SI_SEQ.NEXTVAL
		,'k1'
		,#{inImage}
		,#{note}
		,#{manufactureDay}
		,#{remainStockCount}
		,#{consumptionLimit}
		,#{expirationLimit}
		,sysdate
		,#{orderDetailsNumber}
		,#{inOperation}
		,#{count}
		,#{materialNumber}
		,#{storeNumber}
		)

	</insert>

	<insert id="storeStock" parameterType="StoreInVO">
		MERGE INTO store_stock
		USING dual
		on( Material_number = #{materialNumber}
		and store_number = #{storeNumber})
		WHEN NOT MATCHED THEN
		insert (
		stock_count
		,safety_stock
		,stock_number
		,store_number
		,material_number
		)
		values (
		#{stockCount}
		,#{safetyStock}
		,SS_SEQ.NEXTVAL
		,#{storeNumber}
		,#{materialNumber}
		)
		WHEN MATCHED THEN
		update set stock_count = stock_count + #{stockCount}
	</insert>
	
	<select id="stockfound" resultType="StoreInVO">
	select
			    o.order_day
                ,d.in_day
			    ,o.order_Number
			    ,o.order_Name
			    ,o.oder_App
			    ,d.in_operation 
			From (SELECT *
			      FROM store_order
			      where oder_app='L3'
			      and store_number = #{storeNumber}) o       
			JOIN (SELECT in_Day
			           , disposal_Operation
			           , note
			           , in_operation
			           , order_number
			           , ROW_NUMBER() OVER(PARTITION BY order_number ORDER BY a.order_number DESC) AS rn
			      FROM order_details a LEFT OUTER JOIN store_in b
			      on a.order_details_number = b.order_details_number) d
			on o.order_number = d.order_number
			WHERE d.rn = '1' 
			AND order_day BETWEEN #{startDate} AND #{endDate}
			ORDER by ORDER_NUMBER DESC 
	</select>
	
		<select id="stockInList" resultType="StoreInVO">
	select
			    o.order_day
                ,d.in_day
			    ,o.order_Number
			    ,o.order_Name
			    ,o.oder_App
			    ,d.in_operation 
			From (SELECT *
			      FROM store_order
			      where oder_app='L3'
			      and store_number = #{storeNumber}) o       
			JOIN (SELECT in_Day
			           , disposal_Operation
			           , note
			           , in_operation
			           , order_number
			           , ROW_NUMBER() OVER(PARTITION BY order_number ORDER BY a.order_number DESC) AS rn
			      FROM order_details a LEFT OUTER JOIN store_in b
			      on a.order_details_number = b.order_details_number) d
			on o.order_number = d.order_number
			WHERE d.rn = '1' 
			ORDER by ORDER_NUMBER DESC 
	</select>
	
	<select id="stockInListInfo"  resultType="StoreInVO">
		 select si.order_details_number
                   ,m.material_name
                   ,si.count
                   ,si.remain_stock_count
                   ,si.expiration_limit
                   ,si.consumption_limit
                   ,si.manufacture_day
                   ,si.disposal_operation
                   ,si.note
                   ,so.order_number
                   ,so.order_Day
            from store_order so join order_details od
                 on so.order_number = od.order_number
                 join store_in si
                 on si.order_details_number = od.order_details_number
                 join material m
                 on m.material_number = si.material_number
            where si.store_number = #{storeNumber}
            AND so.order_number = #{orderNumber}
	</select>
	
			<select id="stockInListCon" resultType="int">
		        select count(*)
        from store_order
        where oder_app = 'L3'
        AND store_number = #{storeNumber}
		</select>
	
</mapper>